name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Semver tag to release (e.g., v1.8.0). Leave blank to auto-bump MINOR."
        required: false
  push:
    tags:
      - "v*"

permissions:
  contents: write
  pull-requests: write
  workflows: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  create_tag:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine next version (MINOR bump unless overridden)
        id: ver
        run: |
          set -euo pipefail
          git config user.name "codo-bot"
          git config user.email "actions@users.noreply.github.com"

          if [ -n "${{ inputs.tag }}" ]; then
            NEW_TAG="${{ inputs.tag }}"
          else
            LATEST_TAG="$(git tag -l 'v*' --sort=-version:refname | head -n1 || true)"
            if [ -z "$LATEST_TAG" ]; then
              NEW_TAG="v1.0.0"
            else
              VERSION="${LATEST_TAG#v}"
              MAJOR="$(echo "$VERSION" | cut -d. -f1)"
              MINOR="$(echo "$VERSION" | cut -d. -f2)"
              MINOR=$((MINOR + 1))
              NEW_TAG="v${MAJOR}.${MINOR}.0"
            fi
          fi

          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag: $NEW_TAG"

          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          git push origin "$NEW_TAG"

      - name: Stop (release will run on tag push)
        run: echo "Tag pushed. Separate run will publish artifacts." && exit 0

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for changelog)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: cli/go.mod
          check-latest: true
          cache: true
          cache-dependency-path: cli/go.sum

      - name: Prepare embedded pack & smoke build
        run: |
          ./scripts/embed-pack.sh
          go -C cli build -o /tmp/codo .

      - name: Run GoReleaser (tagged release)
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v1'
          args: release --clean
          workdir: ./cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package dotclaude pack asset
        run: |
          set -euo pipefail
          cd "$GITHUB_WORKSPACE"
          if [ -d pack ]; then
            zip -r "dotclaude-pack.zip" pack
            shasum -a 256 "dotclaude-pack.zip" > "dotclaude-pack.sha256"
          fi

      - name: Upload pack asset to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dotclaude-pack.zip
            dotclaude-pack.sha256
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
