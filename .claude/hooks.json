{
  "PreToolUse": [
    {
      "matcher": "Edit|MultiEdit|Write",
      "hooks": [
        {
          "type": "command",
          "command": "python3 - <<'PY'\nimport json,sys,os,fnmatch\ne=json.load(sys.stdin)\np=e.get('tool_input',{}).get('file_path','') or ''\nBLOCKERS=['.env','/package-lock.json','/pnpm-lock.yaml','/yarn.lock','/.git/']\nif any(b in p for b in BLOCKERS):\n  print('Blocked write to sensitive file:', p)\n  sys.exit(2)\nsys.exit(0)\nPY"
        }
      ]
    },
    {
      "matcher": "Bash(pip install*)|Bash(pnpm install*)|Bash(npm install*)",
      "hooks": [
        {
          "type": "command",
          "command": "echo 'Install blocked by default. Use human approval or sandbox.' ; exit 2"
        }
      ]
    }
  ],
  "PostToolUse": [
    {
      "matcher": "Edit|MultiEdit|Write",
      "hooks": [
        { "type": "command", "command": "jq -r '.tool_input.file_path' | { read f; case \"$f\" in *.ts|*.tsx|*.js|*.jsx) npx prettier --write \"$f\" ;; *.py) uv run ruff check --fix \"$f\"; uv run black \"$f\" ;; *.go) go fmt \"$f\" ;; esac; }" }
      ]
    }
  ],
  "Notification": [
    {
      "matcher": "SubagentStop|Stop",
      "hooks": [
        { "type": "command", "command": "echo '[Claude] Session ended. Ensure tests are green before /ship.'" }
      ]
    }
  ]
}

